name: Build for CI

on:
  push:
    branches: [forkmain]
    paths-ignore:
      - ".github/**"
      - ".git/**"
      - ".gitignore"
      - "Designs/**"
      - "*Tests/**"
      - "*.md"
      - "*.toml"
      - "*.xml"
  workflow_dispatch:
    branches: [forkmain]

env:
  projectfile: Maccy.xcodeproj
  buildscheme: Cleepp

jobs:
  build:
    name: Test Build Cleepp Non-AppStore Variant
    runs-on: macos-15
    if: ${{ ! contains(github.ref, 'refs/tags') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Patch Xcode 15.3
        uses: jpmhouston/patch-package-resolved@v1
        # this fixes a mysterious build failure
        #   xcodebuild: error: Could not resolve package dependencies:
        #     Package.resolved file is corrupted or malformed; fix or delete the file
        #     to continue: unknown 'PinsStorage' version '3'
        # should probably remove this when upgrading the "runs-on" platform
      - name: Build
        run: |
          :
          xcodebuild -version
          
          buildlogfile=xcodebuild-out.txt
          
          echo "- Build with xcodebuild from $(xcodebuild -version)"
          # requires that env.projectfile is the name of the .xcodeproj, and
          # env.buildscheme is a valid build scheme.
          # note: not sure why ONLY_ACTIVE_ARCH=NO is required for xcodebuild,
          # it should already be NO for Release configuration.
          set -o pipefail && xcodebuild ONLY_ACTIVE_ARCH=NO clean build analyze \
            -scheme "${{ env.buildscheme }}" -configuration Release \
            -project "${{ env.projectfile }}" -derivedDataPath . | \
            tee "$buildlogfile" | xcbeautify --renderer github-actions
          
          echo "log=$buildlogfile" >> $GITHUB_OUTPUT
      
      - name: Save build log as artifact
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Build log
          path: |
            ${{ steps.build.outputs.log }}
